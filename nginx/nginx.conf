# nginx.conf

# Configuración global de Nginx
worker_processes auto;
events {
    worker_connections 1024;
}

# El bloque http DEBE envolver a los upstreams, gzip y al server
http {
    log_format custom_proxy '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            'to:$upstream_addr: $request_time $upstream_connect_time $upstream_header_time $upstream_response_time';

    access_log /var/log/nginx/access.log custom_proxy;
    # Habilita la compresión Gzip para acelerar la carga de la página.
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstreams van PRIMERO DENTRO del bloque http
    upstream backend_service {
        server 127.0.0.1:3005;
    }

    upstream frontend_service {
        server 127.0.0.1:3000;
    }

    # Servidor HTTP principal (puerto 80) - Maneja TODO el ruteo.
    # Importante para entornos donde el TLS se termina en un proxy externo (e.g., Dokploy/Cloudflare/ELB)
    server {
        listen 80;
        server_name _;

        # 1. Maneja la carga inicial de GHL en la raíz, enviándola directamente al frontend en /app
        location = / {
            return 301 /app/custom-page$is_args$args;
        }

        # 2. OAuth, API y Webhooks del backend (sin app-loader)
        location ~ ^/(oauth|api|webhooks)(/.*)?$ {
            proxy_pass http://backend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Forward GHL/LeadConnector context headers explicitly
            proxy_set_header x-ghl-context $http_x_ghl_context;
            proxy_set_header x-lc-context $http_x_lc_context;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            proxy_redirect off;
            proxy_read_timeout 86400;
        }

        # 3. Frontend Next.js - TODO bajo /app/
        location /app/ {
            # Importante: sin la barra final para preservar el prefijo /app
            rewrite ^/app/(.*)$ /$1 break; # Strip /app/ prefix
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Configuración específica para Next.js
            proxy_buffering off;
            proxy_redirect off;
            proxy_read_timeout 86400;
            
            # Forward GHL context header to frontend and expose as cookie for client-side bootstrap
            proxy_set_header x-ghl-context $http_x_ghl_context;
            proxy_set_header x-lc-context $http_x_lc_context;
            add_header Set-Cookie "wlink_ghlctx=$http_x_ghl_context; Path=/; Max-Age=600; SameSite=None; Secure" always;
            add_header Set-Cookie "wlink_lcctx=$http_x_lc_context; Path=/; Max-Age=600; SameSite=None; Secure" always;
        }

        # 3b. Redirigir /app a la página principal del frontend
        location = /app {
            return 301 /app/custom-page$is_args$args;
        }

        # Bloque de manejo de archivos estáticos del frontend
        location /_next/static/ {
            alias /usr/src/app/frontend/.next/static/;
            expires 1y;
            access_log off;
        }
        
        # Bloque para archivos estáticos públicos
        location /favicon.ico {
            alias /usr/src/app/frontend/public/favicon.ico;
            access_log off;
        }

        location /wlink-icon.png {
            alias /usr/src/app/frontend/public/wlink-icon.png;
            access_log off;
        }

        # 5. Cualquier otra ruta no manejada - redirigir a /app/
        location / {
            return 301 /app/$is_args$args;
        }
    }

    # Servidor HTTPS (opcional). Usado sólo si se exponen los puertos 443 y existen certificados válidos dentro del contenedor.
    server {
        listen 443 ssl;
        http2 on;
        server_name _;

        # Configuración SSL básica (Railway/Bridge manejará los certificados)
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        
        # Configuración SSL moderna
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;

        # --- REGLAS DE ENRUTAMIENTO ---

        location = / {
            return 301 /app/custom-page$is_args$args;
        }

        location ~ ^/(oauth|api|webhooks)(/.*)?$ {
            proxy_pass http://backend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Forward GHL/LeadConnector context headers explicitly
            proxy_set_header x-ghl-context $http_x_ghl_context;
            proxy_set_header x-lc-context $http_x_lc_context;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            proxy_redirect off;
            proxy_read_timeout 86400;
        }

        location /app/ {
            rewrite ^/app/(.*)$ /$1 break;
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            proxy_redirect off;
            proxy_read_timeout 86400;

            # Forward GHL context header to frontend and expose as cookie for client-side bootstrap (HTTPS)
            proxy_set_header x-ghl-context $http_x_ghl_context;
            proxy_set_header x-lc-context $http_x_lc_context;
            add_header Set-Cookie "wlink_ghlctx=$http_x_ghl_context; Path=/; Max-Age=600; SameSite=None; Secure" always;
            add_header Set-Cookie "wlink_lcctx=$http_x_lc_context; Path=/; Max-Age=600; SameSite=None; Secure" always;
        }

        # Redirigir /app a la página principal del frontend en HTTPS también
        location = /app {
            return 301 /app/custom-page$is_args$args;
        }

        location /_next/static/ {
            alias /usr/src/app/frontend/.next/static/;
            expires 1y;
            access_log off;
        }
        
        location /favicon.ico {
            alias /usr/src/app/frontend/public/favicon.ico;
            access_log off;
        }

        location /wlink-icon.png {
            alias /usr/src/app/frontend/public/wlink-icon.png;
            access_log off;
        }

        location / {
            return 301 /app/$is_args$args;
        }
    }
}
    