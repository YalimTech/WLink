#!/bin/bash

# Script de Verificaci√≥n - Soluci√≥n ERR_TOO_MANY_REDIRECTS
# Ejecutar despu√©s del deployment para verificar la configuraci√≥n

echo "üîç VERIFICANDO CONFIGURACI√ìN DE OAUTH - WLINK"
echo "=============================================="
echo

# Verificar variables de entorno cr√≠ticas
echo "üìã 1. VERIFICANDO VARIABLES DE ENTORNO:"
echo "---------------------------------------"

if [ -z "$APP_URL" ]; then
    echo "‚ùå ERROR: APP_URL no est√° configurada"
    exit 1
else
    echo "‚úÖ APP_URL: $APP_URL"
fi

if [ -z "$FRONTEND_URL" ]; then
    echo "‚ö†Ô∏è  WARNING: FRONTEND_URL no est√° configurada (usar√° APP_URL/app como fallback)"
else
    echo "‚úÖ FRONTEND_URL: $FRONTEND_URL"
fi

echo

# Verificar servicios
echo "üîß 2. VERIFICANDO SERVICIOS:"
echo "----------------------------"

# Verificar backend
if curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/oauth/callback | grep -q "405\|400"; then
    echo "‚úÖ Backend (puerto 3000): Activo"
else
    echo "‚ùå Backend (puerto 3000): No responde correctamente"
fi

# Verificar frontend
if curl -s -o /dev/null -w "%{http_code}" http://localhost:3001 | grep -q "200\|301\|302"; then
    echo "‚úÖ Frontend (puerto 3001): Activo"
else
    echo "‚ùå Frontend (puerto 3001): No responde correctamente"
fi

echo

# Verificar configuraci√≥n de nginx
echo "üåê 3. VERIFICANDO NGINX:"
echo "------------------------"

if nginx -t 2>/dev/null; then
    echo "‚úÖ Configuraci√≥n de nginx: V√°lida"
else
    echo "‚ùå Configuraci√≥n de nginx: Inv√°lida"
fi

echo

# Verificar endpoint OAuth
echo "üîê 4. VERIFICANDO ENDPOINT OAUTH:"
echo "---------------------------------"

# Verificar que el endpoint OAuth est√© disponible
if curl -s -o /dev/null -w "%{http_code}" "$APP_URL/oauth/callback" | grep -q "405\|400"; then
    echo "‚úÖ Endpoint OAuth ($APP_URL/oauth/callback): Disponible"
else
    echo "‚ùå Endpoint OAuth ($APP_URL/oauth/callback): No disponible"
fi

echo

# Verificar p√°gina de custom-page
echo "üìÑ 5. VERIFICANDO P√ÅGINA DE APP (custom-page):"
echo "---------------------------------------------"

EXPECTED_APP_URL="${FRONTEND_URL:-$APP_URL/app}/custom-page?locationId=test-location"
if curl -s -o /dev/null -w "%{http_code}" "$EXPECTED_APP_URL" | grep -q "200\|400\|401"; then
    echo "‚úÖ P√°gina de app ($EXPECTED_APP_URL): Responde"
else
    echo "‚ùå P√°gina de app ($EXPECTED_APP_URL): No responde"
fi

echo

# Instrucciones finales
echo "üìù PR√ìXIMOS PASOS:"
echo "------------------"
echo "1. Aseg√∫rate de que todas las verificaciones muestren ‚úÖ"
echo "2. Ve a GoHighLevel y configura la Redirect URI como:"
echo "   ‚Üí $APP_URL/oauth/callback"
echo "3. Prueba la instalaci√≥n de la app desde GoHighLevel"
echo "4. Debe redirigir a: $EXPECTED_SUCCESS_URL"
echo

echo "üéØ CONFIGURACI√ìN EN GOHIGHLEVEL:"
echo "-------------------------------"
echo "Redirect URI: $APP_URL/oauth/callback"
echo "App Status: Debe estar en 'Published' o 'Live'"
echo

echo "üìû SOPORTE:"
echo "-----------"
echo "Si algo no funciona, proporciona:"
echo "- Output de este script"
echo "- Logs del backend con '[OAuth Callback]'"
echo "- Screenshot del error en el navegador"
echo

if [ -z "$FRONTEND_URL" ] || [ -z "$APP_URL" ]; then
    echo "‚ö†Ô∏è  ADVERTENCIA: Verifica que todas las variables est√©n configuradas"
    exit 1
else
    echo "‚úÖ VERIFICACI√ìN COMPLETADA - La configuraci√≥n parece correcta"
fi